
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  000007d4  00000868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  00800078  00800078  00000880  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000952  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005e4  00000000  00000000  00001276  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ab  00000000  00000000  0000185a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00001d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e3  00000000  00000000  00001dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000048d  00000000  00000000  000021b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00002644  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e4 ed       	ldi	r30, 0xD4	; 212
  3a:	f7 e0       	ldi	r31, 0x07	; 7
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a8 37       	cpi	r26, 0x78	; 120
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a8 e7       	ldi	r26, 0x78	; 120
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a6 38       	cpi	r26, 0x86	; 134
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	44 d1       	rcall	.+648    	; 0x2e2 <main>
  5a:	ba c3       	rjmp	.+1908   	; 0x7d0 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <calc_half_periods>:

float vds_freq[6]  = {1, 1, 1, 1, 1, 1}; 
int half_periods_vd[6] = {0, 0, 0, 0, 0, 0};
int half_period_counter = 0;

void calc_half_periods(void){
  5e:	ef 92       	push	r14
  60:	ff 92       	push	r15
  62:	0f 93       	push	r16
  64:	1f 93       	push	r17
  66:	cf 93       	push	r28
  68:	df 93       	push	r29
  6a:	c0 e6       	ldi	r28, 0x60	; 96
  6c:	d0 e0       	ldi	r29, 0x00	; 0
  6e:	0a e7       	ldi	r16, 0x7A	; 122
  70:	10 e0       	ldi	r17, 0x00	; 0
  72:	0f 2e       	mov	r0, r31
  74:	f8 e7       	ldi	r31, 0x78	; 120
  76:	ef 2e       	mov	r14, r31
  78:	f0 e0       	ldi	r31, 0x00	; 0
  7a:	ff 2e       	mov	r15, r31
  7c:	f0 2d       	mov	r31, r0
	int i = 0;
	for (i = 0; i < 6; i++)
	{
		half_periods_vd[i] = 1 / vds_freq[i] * 1000 / 2; 
  7e:	29 91       	ld	r18, Y+
  80:	39 91       	ld	r19, Y+
  82:	49 91       	ld	r20, Y+
  84:	59 91       	ld	r21, Y+
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	70 e0       	ldi	r23, 0x00	; 0
  8a:	80 e8       	ldi	r24, 0x80	; 128
  8c:	9f e3       	ldi	r25, 0x3F	; 63
  8e:	04 d2       	rcall	.+1032   	; 0x498 <__divsf3>
  90:	20 e0       	ldi	r18, 0x00	; 0
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	4a e7       	ldi	r20, 0x7A	; 122
  96:	54 e4       	ldi	r21, 0x44	; 68
  98:	ed d2       	rcall	.+1498   	; 0x674 <__mulsf3>
  9a:	20 e0       	ldi	r18, 0x00	; 0
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	40 e0       	ldi	r20, 0x00	; 0
  a0:	5f e3       	ldi	r21, 0x3F	; 63
  a2:	e8 d2       	rcall	.+1488   	; 0x674 <__mulsf3>
  a4:	61 d2       	rcall	.+1218   	; 0x568 <__fixsfsi>
  a6:	f8 01       	movw	r30, r16
  a8:	61 93       	st	Z+, r22
  aa:	71 93       	st	Z+, r23
  ac:	8f 01       	movw	r16, r30
int half_periods_vd[6] = {0, 0, 0, 0, 0, 0};
int half_period_counter = 0;

void calc_half_periods(void){
	int i = 0;
	for (i = 0; i < 6; i++)
  ae:	ce 15       	cp	r28, r14
  b0:	df 05       	cpc	r29, r15
  b2:	29 f7       	brne	.-54     	; 0x7e <calc_half_periods+0x20>
	{
		half_periods_vd[i] = 1 / vds_freq[i] * 1000 / 2; 
	}
}
  b4:	df 91       	pop	r29
  b6:	cf 91       	pop	r28
  b8:	1f 91       	pop	r17
  ba:	0f 91       	pop	r16
  bc:	ff 90       	pop	r15
  be:	ef 90       	pop	r14
  c0:	08 95       	ret

000000c2 <toggle_vd>:
		_delay_ms(1); 
		}
}

void toggle_vd(int diode_num){
	switch(diode_num){
  c2:	83 30       	cpi	r24, 0x03	; 3
  c4:	91 05       	cpc	r25, r1
  c6:	d1 f0       	breq	.+52     	; 0xfc <toggle_vd+0x3a>
  c8:	34 f4       	brge	.+12     	; 0xd6 <toggle_vd+0x14>
  ca:	81 30       	cpi	r24, 0x01	; 1
  cc:	91 05       	cpc	r25, r1
  ce:	51 f0       	breq	.+20     	; 0xe4 <toggle_vd+0x22>
  d0:	02 97       	sbiw	r24, 0x02	; 2
  d2:	71 f0       	breq	.+28     	; 0xf0 <toggle_vd+0x2e>
  d4:	08 95       	ret
  d6:	85 30       	cpi	r24, 0x05	; 5
  d8:	91 05       	cpc	r25, r1
  da:	e1 f0       	breq	.+56     	; 0x114 <toggle_vd+0x52>
  dc:	ac f0       	brlt	.+42     	; 0x108 <toggle_vd+0x46>
  de:	06 97       	sbiw	r24, 0x06	; 6
  e0:	f9 f0       	breq	.+62     	; 0x120 <toggle_vd+0x5e>
  e2:	08 95       	ret
		case 1:
		if (bit_is_clear(PINB, PB0)) PORTB |= (1 << PB0);
  e4:	b0 99       	sbic	0x16, 0	; 22
  e6:	02 c0       	rjmp	.+4      	; 0xec <toggle_vd+0x2a>
  e8:	c0 9a       	sbi	0x18, 0	; 24
  ea:	08 95       	ret
		else PORTB &= ~(1 << PB0);
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
		break;
		case 2:
		if (bit_is_clear(PINB, PB1)) PORTB |= (1 << PB1);
  f0:	b1 99       	sbic	0x16, 1	; 22
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <toggle_vd+0x36>
  f4:	c1 9a       	sbi	0x18, 1	; 24
  f6:	08 95       	ret
		else PORTB &= ~(1 << PB1);
  f8:	c1 98       	cbi	0x18, 1	; 24
  fa:	08 95       	ret
		break;
		case 3:
		if (bit_is_clear(PINB, PB2)) PORTB |= (1 << PB2);
  fc:	b2 99       	sbic	0x16, 2	; 22
  fe:	02 c0       	rjmp	.+4      	; 0x104 <toggle_vd+0x42>
 100:	c2 9a       	sbi	0x18, 2	; 24
 102:	08 95       	ret
		else PORTB &= ~(1 << PB2);
 104:	c2 98       	cbi	0x18, 2	; 24
 106:	08 95       	ret
		break;
		case 4:
		if (bit_is_clear(PINB, PB3)) PORTB |= (1 << PB3);
 108:	b3 99       	sbic	0x16, 3	; 22
 10a:	02 c0       	rjmp	.+4      	; 0x110 <toggle_vd+0x4e>
 10c:	c3 9a       	sbi	0x18, 3	; 24
 10e:	08 95       	ret
		else PORTB &= ~(1 << PB3);
 110:	c3 98       	cbi	0x18, 3	; 24
 112:	08 95       	ret
		break;
		case 5:
		if (bit_is_clear(PINB, PB4)) PORTB |= (1 << PB4);
 114:	b4 99       	sbic	0x16, 4	; 22
 116:	02 c0       	rjmp	.+4      	; 0x11c <toggle_vd+0x5a>
 118:	c4 9a       	sbi	0x18, 4	; 24
 11a:	08 95       	ret
		else PORTB &= ~(1 << PB4);
 11c:	c4 98       	cbi	0x18, 4	; 24
 11e:	08 95       	ret
		break;
		case 6:
		if (bit_is_clear(PINB, PB5)) PORTB |= (1 << PB5);
 120:	b5 99       	sbic	0x16, 5	; 22
 122:	02 c0       	rjmp	.+4      	; 0x128 <toggle_vd+0x66>
 124:	c5 9a       	sbi	0x18, 5	; 24
 126:	08 95       	ret
		else PORTB &= ~(1 << PB5);
 128:	c5 98       	cbi	0x18, 5	; 24
 12a:	08 95       	ret

0000012c <start_setup>:
	{
		half_periods_vd[i] = 1 / vds_freq[i] * 1000 / 2; 
	}
}

void start_setup(void){
 12c:	3f 92       	push	r3
 12e:	4f 92       	push	r4
 130:	5f 92       	push	r5
 132:	6f 92       	push	r6
 134:	7f 92       	push	r7
 136:	8f 92       	push	r8
 138:	9f 92       	push	r9
 13a:	af 92       	push	r10
 13c:	bf 92       	push	r11
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
	while(bit_is_clear(PINC, PC0)) _delay_ms(100);
 14e:	98 99       	sbic	0x13, 0	; 19
 150:	08 c0       	rjmp	.+16     	; 0x162 <start_setup+0x36>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 152:	87 ea       	ldi	r24, 0xA7	; 167
 154:	91 e6       	ldi	r25, 0x61	; 97
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <start_setup+0x2a>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <start_setup+0x30>
 15c:	00 00       	nop
 15e:	98 9b       	sbis	0x13, 0	; 19
 160:	f8 cf       	rjmp	.-16     	; 0x152 <start_setup+0x26>
	PORTB = 0xff;
 162:	8f ef       	ldi	r24, 0xFF	; 255
 164:	88 bb       	out	0x18, r24	; 24
	int current_vd = 1;
	int time_out = 6000;
	int time_out_count = 0;
 166:	c0 e0       	ldi	r28, 0x00	; 0
 168:	d0 e0       	ldi	r29, 0x00	; 0

void start_setup(void){
	while(bit_is_clear(PINC, PC0)) _delay_ms(100);
	PORTB = 0xff;
	int current_vd = 1;
	int time_out = 6000;
 16a:	00 e7       	ldi	r16, 0x70	; 112
 16c:	17 e1       	ldi	r17, 0x17	; 23
}

void start_setup(void){
	while(bit_is_clear(PINC, PC0)) _delay_ms(100);
	PORTB = 0xff;
	int current_vd = 1;
 16e:	ee 24       	eor	r14, r14
 170:	e3 94       	inc	r14
 172:	f1 2c       	mov	r15, r1
			_delay_ms(50);
			if(bit_is_clear(PINC, PC0)){
				if(current_vd < 6) current_vd++;
				else current_vd = 1;
				time_out = 0;
				PORTB = 0xff; 
 174:	33 24       	eor	r3, r3
 176:	3a 94       	dec	r3
		if(bit_is_clear(PINC, PC0)){
			_delay_ms(50);
			if(bit_is_clear(PINC, PC0)){
				if(current_vd < 6) current_vd++;
				else current_vd = 1;
				time_out = 0;
 178:	c1 2c       	mov	r12, r1
 17a:	d1 2c       	mov	r13, r1
		}
		if(bit_is_clear(PINC, PC1)){
			_delay_ms(50);
			if(bit_is_clear(PINC, PC1)){
				vds_freq[current_vd - 1] = vds_freq[current_vd - 1] * 2;
				if(vds_freq[current_vd - 1] > FREQ_MAX) vds_freq[current_vd - 1] = FREQ_MIN;
 17c:	0f 2e       	mov	r0, r31
 17e:	fd ec       	ldi	r31, 0xCD	; 205
 180:	8f 2e       	mov	r8, r31
 182:	fc ec       	ldi	r31, 0xCC	; 204
 184:	9f 2e       	mov	r9, r31
 186:	a9 2c       	mov	r10, r9
 188:	fd e3       	ldi	r31, 0x3D	; 61
 18a:	bf 2e       	mov	r11, r31
 18c:	f0 2d       	mov	r31, r0
	PORTB = 0xff;
	int current_vd = 1;
	int time_out = 6000;
	int time_out_count = 0;
	while (1){
		if(bit_is_clear(PINC, PC0)){
 18e:	98 99       	sbic	0x13, 0	; 19
 190:	1c c0       	rjmp	.+56     	; 0x1ca <start_setup+0x9e>
 192:	83 ed       	ldi	r24, 0xD3	; 211
 194:	90 e3       	ldi	r25, 0x30	; 48
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <start_setup+0x6a>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <start_setup+0x70>
 19c:	00 00       	nop
			_delay_ms(50);
			if(bit_is_clear(PINC, PC0)){
 19e:	98 99       	sbic	0x13, 0	; 19
 1a0:	0e c0       	rjmp	.+28     	; 0x1be <start_setup+0x92>
				if(current_vd < 6) current_vd++;
 1a2:	96 e0       	ldi	r25, 0x06	; 6
 1a4:	e9 16       	cp	r14, r25
 1a6:	f1 04       	cpc	r15, r1
 1a8:	24 f4       	brge	.+8      	; 0x1b2 <start_setup+0x86>
 1aa:	2f ef       	ldi	r18, 0xFF	; 255
 1ac:	e2 1a       	sub	r14, r18
 1ae:	f2 0a       	sbc	r15, r18
 1b0:	03 c0       	rjmp	.+6      	; 0x1b8 <start_setup+0x8c>
				else current_vd = 1;
 1b2:	ee 24       	eor	r14, r14
 1b4:	e3 94       	inc	r14
 1b6:	f1 2c       	mov	r15, r1
				time_out = 0;
				PORTB = 0xff; 
 1b8:	38 ba       	out	0x18, r3	; 24
		if(bit_is_clear(PINC, PC0)){
			_delay_ms(50);
			if(bit_is_clear(PINC, PC0)){
				if(current_vd < 6) current_vd++;
				else current_vd = 1;
				time_out = 0;
 1ba:	0c 2d       	mov	r16, r12
 1bc:	1d 2d       	mov	r17, r13
 1be:	87 ea       	ldi	r24, 0xA7	; 167
 1c0:	91 e6       	ldi	r25, 0x61	; 97
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <start_setup+0x96>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <start_setup+0x9c>
 1c8:	00 00       	nop
				PORTB = 0xff; 
			}
			_delay_ms(100);
		}
		if(bit_is_clear(PINC, PC1)){
 1ca:	99 99       	sbic	0x13, 1	; 19
 1cc:	42 c0       	rjmp	.+132    	; 0x252 <start_setup+0x126>
 1ce:	83 ed       	ldi	r24, 0xD3	; 211
 1d0:	90 e3       	ldi	r25, 0x30	; 48
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <start_setup+0xa6>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <start_setup+0xac>
 1d8:	00 00       	nop
			_delay_ms(50);
			if(bit_is_clear(PINC, PC1)){
 1da:	99 99       	sbic	0x13, 1	; 19
 1dc:	34 c0       	rjmp	.+104    	; 0x246 <start_setup+0x11a>
				vds_freq[current_vd - 1] = vds_freq[current_vd - 1] * 2;
 1de:	87 01       	movw	r16, r14
 1e0:	01 50       	subi	r16, 0x01	; 1
 1e2:	11 09       	sbc	r17, r1
 1e4:	f8 01       	movw	r30, r16
 1e6:	ee 0f       	add	r30, r30
 1e8:	ff 1f       	adc	r31, r31
 1ea:	ee 0f       	add	r30, r30
 1ec:	ff 1f       	adc	r31, r31
 1ee:	e0 5a       	subi	r30, 0xA0	; 160
 1f0:	ff 4f       	sbci	r31, 0xFF	; 255
 1f2:	60 81       	ld	r22, Z
 1f4:	71 81       	ldd	r23, Z+1	; 0x01
 1f6:	82 81       	ldd	r24, Z+2	; 0x02
 1f8:	93 81       	ldd	r25, Z+3	; 0x03
 1fa:	9b 01       	movw	r18, r22
 1fc:	ac 01       	movw	r20, r24
 1fe:	e8 d0       	rcall	.+464    	; 0x3d0 <__addsf3>
 200:	2b 01       	movw	r4, r22
 202:	3c 01       	movw	r6, r24
				if(vds_freq[current_vd - 1] > FREQ_MAX) vds_freq[current_vd - 1] = FREQ_MIN;
 204:	20 e0       	ldi	r18, 0x00	; 0
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	40 e2       	ldi	r20, 0x20	; 32
 20a:	51 e4       	ldi	r21, 0x41	; 65
 20c:	2f d2       	rcall	.+1118   	; 0x66c <__gesf2>
 20e:	18 16       	cp	r1, r24
 210:	64 f0       	brlt	.+24     	; 0x22a <start_setup+0xfe>
			_delay_ms(100);
		}
		if(bit_is_clear(PINC, PC1)){
			_delay_ms(50);
			if(bit_is_clear(PINC, PC1)){
				vds_freq[current_vd - 1] = vds_freq[current_vd - 1] * 2;
 212:	00 0f       	add	r16, r16
 214:	11 1f       	adc	r17, r17
 216:	00 0f       	add	r16, r16
 218:	11 1f       	adc	r17, r17
 21a:	f8 01       	movw	r30, r16
 21c:	e0 5a       	subi	r30, 0xA0	; 160
 21e:	ff 4f       	sbci	r31, 0xFF	; 255
 220:	40 82       	st	Z, r4
 222:	51 82       	std	Z+1, r5	; 0x01
 224:	62 82       	std	Z+2, r6	; 0x02
 226:	73 82       	std	Z+3, r7	; 0x03
 228:	0b c0       	rjmp	.+22     	; 0x240 <start_setup+0x114>
				if(vds_freq[current_vd - 1] > FREQ_MAX) vds_freq[current_vd - 1] = FREQ_MIN;
 22a:	00 0f       	add	r16, r16
 22c:	11 1f       	adc	r17, r17
 22e:	00 0f       	add	r16, r16
 230:	11 1f       	adc	r17, r17
 232:	f8 01       	movw	r30, r16
 234:	e0 5a       	subi	r30, 0xA0	; 160
 236:	ff 4f       	sbci	r31, 0xFF	; 255
 238:	80 82       	st	Z, r8
 23a:	91 82       	std	Z+1, r9	; 0x01
 23c:	a2 82       	std	Z+2, r10	; 0x02
 23e:	b3 82       	std	Z+3, r11	; 0x03
				calc_half_periods();
 240:	0e df       	rcall	.-484    	; 0x5e <calc_half_periods>
				time_out = 0;
 242:	0c 2d       	mov	r16, r12
 244:	1d 2d       	mov	r17, r13
 246:	87 ea       	ldi	r24, 0xA7	; 167
 248:	91 e6       	ldi	r25, 0x61	; 97
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <start_setup+0x11e>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <start_setup+0x124>
 250:	00 00       	nop
			}
			_delay_ms(100);
		}
		if(bit_is_clear(PINC, PC2)){
 252:	9a 99       	sbic	0x13, 2	; 19
 254:	0b c0       	rjmp	.+22     	; 0x26c <start_setup+0x140>
 256:	83 ed       	ldi	r24, 0xD3	; 211
 258:	90 e3       	ldi	r25, 0x30	; 48
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <start_setup+0x12e>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <start_setup+0x134>
 260:	00 00       	nop
			_delay_ms(50);
			if(bit_is_clear(PINC, PC2)){
 262:	9a 99       	sbic	0x13, 2	; 19
 264:	03 c0       	rjmp	.+6      	; 0x26c <start_setup+0x140>
				PORTB = 0xff;
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	88 bb       	out	0x18, r24	; 24
				return;
 26a:	29 c0       	rjmp	.+82     	; 0x2be <start_setup+0x192>
			}
		}
		if(++half_period_counter == HALF_PERIOD_MAX) half_period_counter = 0;
 26c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 270:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__data_end+0x1>
 27a:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end>
 27e:	88 38       	cpi	r24, 0x88	; 136
 280:	23 e1       	ldi	r18, 0x13	; 19
 282:	92 07       	cpc	r25, r18
 284:	29 f4       	brne	.+10     	; 0x290 <start_setup+0x164>
 286:	c0 92 78 00 	sts	0x0078, r12	; 0x800078 <__data_end>
 28a:	d0 92 79 00 	sts	0x0079, r13	; 0x800079 <__data_end+0x1>
 28e:	0a c0       	rjmp	.+20     	; 0x2a4 <start_setup+0x178>
		
		if(!(half_period_counter % half_periods_vd[current_vd - 1])) {toggle_vd(current_vd);}
 290:	f7 01       	movw	r30, r14
 292:	ee 0f       	add	r30, r30
 294:	ff 1f       	adc	r31, r31
 296:	e8 58       	subi	r30, 0x88	; 136
 298:	ff 4f       	sbci	r31, 0xFF	; 255
 29a:	60 81       	ld	r22, Z
 29c:	71 81       	ldd	r23, Z+1	; 0x01
 29e:	71 d2       	rcall	.+1250   	; 0x782 <__divmodhi4>
 2a0:	89 2b       	or	r24, r25
 2a2:	11 f4       	brne	.+4      	; 0x2a8 <start_setup+0x17c>
 2a4:	c7 01       	movw	r24, r14
 2a6:	0d df       	rcall	.-486    	; 0xc2 <toggle_vd>
		time_out_count++;
 2a8:	21 96       	adiw	r28, 0x01	; 1
		if (time_out_count == time_out) break;
 2aa:	0c 17       	cp	r16, r28
 2ac:	1d 07       	cpc	r17, r29
 2ae:	39 f0       	breq	.+14     	; 0x2be <start_setup+0x192>
 2b0:	89 ef       	ldi	r24, 0xF9	; 249
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	01 97       	sbiw	r24, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <start_setup+0x188>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <start_setup+0x18e>
 2ba:	00 00       	nop
 2bc:	68 cf       	rjmp	.-304    	; 0x18e <start_setup+0x62>
		_delay_ms(1); 
		}
}
 2be:	df 91       	pop	r29
 2c0:	cf 91       	pop	r28
 2c2:	1f 91       	pop	r17
 2c4:	0f 91       	pop	r16
 2c6:	ff 90       	pop	r15
 2c8:	ef 90       	pop	r14
 2ca:	df 90       	pop	r13
 2cc:	cf 90       	pop	r12
 2ce:	bf 90       	pop	r11
 2d0:	af 90       	pop	r10
 2d2:	9f 90       	pop	r9
 2d4:	8f 90       	pop	r8
 2d6:	7f 90       	pop	r7
 2d8:	6f 90       	pop	r6
 2da:	5f 90       	pop	r5
 2dc:	4f 90       	pop	r4
 2de:	3f 90       	pop	r3
 2e0:	08 95       	ret

000002e2 <main>:
	}
}

int main(void){
	//configure the ports 
	DDRB = 0xff;
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	87 bb       	out	0x17, r24	; 23
    PORTB = 0xff;
 2e6:	88 bb       	out	0x18, r24	; 24
	DDRC = 0x00;
 2e8:	14 ba       	out	0x14, r1	; 20
	PORTC = 0b00000111;
 2ea:	87 e0       	ldi	r24, 0x07	; 7
 2ec:	85 bb       	out	0x15, r24	; 21
	
	calc_half_periods();
 2ee:	b7 de       	rcall	.-658    	; 0x5e <calc_half_periods>
	
	while (1){
		half_period_counter++;
		
		if(!(half_period_counter % half_periods_vd[0])) {toggle_vd(1);}
 2f0:	ca e7       	ldi	r28, 0x7A	; 122
 2f2:	d0 e0       	ldi	r29, 0x00	; 0
	PORTC = 0b00000111;
	
	calc_half_periods();
	
	while (1){
		half_period_counter++;
 2f4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 2f8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 2fc:	01 96       	adiw	r24, 0x01	; 1
 2fe:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__data_end+0x1>
 302:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end>
		
		if(!(half_period_counter % half_periods_vd[0])) {toggle_vd(1);}
 306:	68 81       	ld	r22, Y
 308:	79 81       	ldd	r23, Y+1	; 0x01
 30a:	3b d2       	rcall	.+1142   	; 0x782 <__divmodhi4>
 30c:	89 2b       	or	r24, r25
 30e:	19 f4       	brne	.+6      	; 0x316 <main+0x34>
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	d6 de       	rcall	.-596    	; 0xc2 <toggle_vd>
		if(!(half_period_counter % half_periods_vd[1])) {toggle_vd(2);}
 316:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 31a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 31e:	6a 81       	ldd	r22, Y+2	; 0x02
 320:	7b 81       	ldd	r23, Y+3	; 0x03
 322:	2f d2       	rcall	.+1118   	; 0x782 <__divmodhi4>
 324:	89 2b       	or	r24, r25
 326:	19 f4       	brne	.+6      	; 0x32e <main+0x4c>
 328:	82 e0       	ldi	r24, 0x02	; 2
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	ca de       	rcall	.-620    	; 0xc2 <toggle_vd>
		if(!(half_period_counter % half_periods_vd[2])) {toggle_vd(3);}
 32e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 332:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 336:	6c 81       	ldd	r22, Y+4	; 0x04
 338:	7d 81       	ldd	r23, Y+5	; 0x05
 33a:	23 d2       	rcall	.+1094   	; 0x782 <__divmodhi4>
 33c:	89 2b       	or	r24, r25
 33e:	19 f4       	brne	.+6      	; 0x346 <main+0x64>
 340:	83 e0       	ldi	r24, 0x03	; 3
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	be de       	rcall	.-644    	; 0xc2 <toggle_vd>
		if(!(half_period_counter % half_periods_vd[3])) {toggle_vd(4);}
 346:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 34a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 34e:	6e 81       	ldd	r22, Y+6	; 0x06
 350:	7f 81       	ldd	r23, Y+7	; 0x07
 352:	17 d2       	rcall	.+1070   	; 0x782 <__divmodhi4>
 354:	89 2b       	or	r24, r25
 356:	19 f4       	brne	.+6      	; 0x35e <main+0x7c>
 358:	84 e0       	ldi	r24, 0x04	; 4
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	b2 de       	rcall	.-668    	; 0xc2 <toggle_vd>
		if(!(half_period_counter % half_periods_vd[4])) {toggle_vd(5);}
 35e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 362:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 366:	68 85       	ldd	r22, Y+8	; 0x08
 368:	79 85       	ldd	r23, Y+9	; 0x09
 36a:	0b d2       	rcall	.+1046   	; 0x782 <__divmodhi4>
 36c:	89 2b       	or	r24, r25
 36e:	19 f4       	brne	.+6      	; 0x376 <main+0x94>
 370:	85 e0       	ldi	r24, 0x05	; 5
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	a6 de       	rcall	.-692    	; 0xc2 <toggle_vd>
		if(!(half_period_counter % half_periods_vd[5])) {toggle_vd(6);}					
 376:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 37a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 37e:	6a 85       	ldd	r22, Y+10	; 0x0a
 380:	7b 85       	ldd	r23, Y+11	; 0x0b
 382:	ff d1       	rcall	.+1022   	; 0x782 <__divmodhi4>
 384:	89 2b       	or	r24, r25
 386:	19 f4       	brne	.+6      	; 0x38e <main+0xac>
 388:	86 e0       	ldi	r24, 0x06	; 6
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	9a de       	rcall	.-716    	; 0xc2 <toggle_vd>
 38e:	89 ef       	ldi	r24, 0xF9	; 249
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	f1 f7       	brne	.-4      	; 0x392 <main+0xb0>
 396:	00 c0       	rjmp	.+0      	; 0x398 <main+0xb6>
 398:	00 00       	nop
		
		_delay_ms(1);
		
		if(half_period_counter == HALF_PERIOD_MAX) {half_period_counter = 0;}
 39a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 39e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 3a2:	88 38       	cpi	r24, 0x88	; 136
 3a4:	93 41       	sbci	r25, 0x13	; 19
 3a6:	21 f4       	brne	.+8      	; 0x3b0 <main+0xce>
 3a8:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__data_end+0x1>
 3ac:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__data_end>
		//start setup
		if (bit_is_clear(PINC, PC0)){
 3b0:	98 99       	sbic	0x13, 0	; 19
 3b2:	a0 cf       	rjmp	.-192    	; 0x2f4 <main+0x12>
 3b4:	8f e3       	ldi	r24, 0x3F	; 63
 3b6:	9d e0       	ldi	r25, 0x0D	; 13
 3b8:	23 e0       	ldi	r18, 0x03	; 3
 3ba:	81 50       	subi	r24, 0x01	; 1
 3bc:	90 40       	sbci	r25, 0x00	; 0
 3be:	20 40       	sbci	r18, 0x00	; 0
 3c0:	e1 f7       	brne	.-8      	; 0x3ba <main+0xd8>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <main+0xe2>
 3c4:	00 00       	nop
			_delay_ms(1000);
			if(bit_is_clear(PINC, PC0)) {start_setup();}
 3c6:	98 99       	sbic	0x13, 0	; 19
 3c8:	95 cf       	rjmp	.-214    	; 0x2f4 <main+0x12>
 3ca:	b0 de       	rcall	.-672    	; 0x12c <start_setup>
 3cc:	93 cf       	rjmp	.-218    	; 0x2f4 <main+0x12>

000003ce <__subsf3>:
 3ce:	50 58       	subi	r21, 0x80	; 128

000003d0 <__addsf3>:
 3d0:	bb 27       	eor	r27, r27
 3d2:	aa 27       	eor	r26, r26
 3d4:	0e d0       	rcall	.+28     	; 0x3f2 <__addsf3x>
 3d6:	10 c1       	rjmp	.+544    	; 0x5f8 <__fp_round>
 3d8:	01 d1       	rcall	.+514    	; 0x5dc <__fp_pscA>
 3da:	30 f0       	brcs	.+12     	; 0x3e8 <__addsf3+0x18>
 3dc:	06 d1       	rcall	.+524    	; 0x5ea <__fp_pscB>
 3de:	20 f0       	brcs	.+8      	; 0x3e8 <__addsf3+0x18>
 3e0:	31 f4       	brne	.+12     	; 0x3ee <__addsf3+0x1e>
 3e2:	9f 3f       	cpi	r25, 0xFF	; 255
 3e4:	11 f4       	brne	.+4      	; 0x3ea <__addsf3+0x1a>
 3e6:	1e f4       	brtc	.+6      	; 0x3ee <__addsf3+0x1e>
 3e8:	f6 c0       	rjmp	.+492    	; 0x5d6 <__fp_nan>
 3ea:	0e f4       	brtc	.+2      	; 0x3ee <__addsf3+0x1e>
 3ec:	e0 95       	com	r30
 3ee:	e7 fb       	bst	r30, 7
 3f0:	ec c0       	rjmp	.+472    	; 0x5ca <__fp_inf>

000003f2 <__addsf3x>:
 3f2:	e9 2f       	mov	r30, r25
 3f4:	12 d1       	rcall	.+548    	; 0x61a <__fp_split3>
 3f6:	80 f3       	brcs	.-32     	; 0x3d8 <__addsf3+0x8>
 3f8:	ba 17       	cp	r27, r26
 3fa:	62 07       	cpc	r22, r18
 3fc:	73 07       	cpc	r23, r19
 3fe:	84 07       	cpc	r24, r20
 400:	95 07       	cpc	r25, r21
 402:	18 f0       	brcs	.+6      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 404:	71 f4       	brne	.+28     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 406:	9e f5       	brtc	.+102    	; 0x46e <__stack+0xf>
 408:	2a c1       	rjmp	.+596    	; 0x65e <__fp_zero>
 40a:	0e f4       	brtc	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40c:	e0 95       	com	r30
 40e:	0b 2e       	mov	r0, r27
 410:	ba 2f       	mov	r27, r26
 412:	a0 2d       	mov	r26, r0
 414:	0b 01       	movw	r0, r22
 416:	b9 01       	movw	r22, r18
 418:	90 01       	movw	r18, r0
 41a:	0c 01       	movw	r0, r24
 41c:	ca 01       	movw	r24, r20
 41e:	a0 01       	movw	r20, r0
 420:	11 24       	eor	r1, r1
 422:	ff 27       	eor	r31, r31
 424:	59 1b       	sub	r21, r25
 426:	99 f0       	breq	.+38     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 428:	59 3f       	cpi	r21, 0xF9	; 249
 42a:	50 f4       	brcc	.+20     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 42c:	50 3e       	cpi	r21, 0xE0	; 224
 42e:	68 f1       	brcs	.+90     	; 0x48a <__stack+0x2b>
 430:	1a 16       	cp	r1, r26
 432:	f0 40       	sbci	r31, 0x00	; 0
 434:	a2 2f       	mov	r26, r18
 436:	23 2f       	mov	r18, r19
 438:	34 2f       	mov	r19, r20
 43a:	44 27       	eor	r20, r20
 43c:	58 5f       	subi	r21, 0xF8	; 248
 43e:	f3 cf       	rjmp	.-26     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 440:	46 95       	lsr	r20
 442:	37 95       	ror	r19
 444:	27 95       	ror	r18
 446:	a7 95       	ror	r26
 448:	f0 40       	sbci	r31, 0x00	; 0
 44a:	53 95       	inc	r21
 44c:	c9 f7       	brne	.-14     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 44e:	7e f4       	brtc	.+30     	; 0x46e <__stack+0xf>
 450:	1f 16       	cp	r1, r31
 452:	ba 0b       	sbc	r27, r26
 454:	62 0b       	sbc	r22, r18
 456:	73 0b       	sbc	r23, r19
 458:	84 0b       	sbc	r24, r20
 45a:	ba f0       	brmi	.+46     	; 0x48a <__stack+0x2b>
 45c:	91 50       	subi	r25, 0x01	; 1
 45e:	a1 f0       	breq	.+40     	; 0x488 <__stack+0x29>
 460:	ff 0f       	add	r31, r31
 462:	bb 1f       	adc	r27, r27
 464:	66 1f       	adc	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	c2 f7       	brpl	.-16     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 46c:	0e c0       	rjmp	.+28     	; 0x48a <__stack+0x2b>
 46e:	ba 0f       	add	r27, r26
 470:	62 1f       	adc	r22, r18
 472:	73 1f       	adc	r23, r19
 474:	84 1f       	adc	r24, r20
 476:	48 f4       	brcc	.+18     	; 0x48a <__stack+0x2b>
 478:	87 95       	ror	r24
 47a:	77 95       	ror	r23
 47c:	67 95       	ror	r22
 47e:	b7 95       	ror	r27
 480:	f7 95       	ror	r31
 482:	9e 3f       	cpi	r25, 0xFE	; 254
 484:	08 f0       	brcs	.+2      	; 0x488 <__stack+0x29>
 486:	b3 cf       	rjmp	.-154    	; 0x3ee <__addsf3+0x1e>
 488:	93 95       	inc	r25
 48a:	88 0f       	add	r24, r24
 48c:	08 f0       	brcs	.+2      	; 0x490 <__stack+0x31>
 48e:	99 27       	eor	r25, r25
 490:	ee 0f       	add	r30, r30
 492:	97 95       	ror	r25
 494:	87 95       	ror	r24
 496:	08 95       	ret

00000498 <__divsf3>:
 498:	0c d0       	rcall	.+24     	; 0x4b2 <__divsf3x>
 49a:	ae c0       	rjmp	.+348    	; 0x5f8 <__fp_round>
 49c:	a6 d0       	rcall	.+332    	; 0x5ea <__fp_pscB>
 49e:	40 f0       	brcs	.+16     	; 0x4b0 <__divsf3+0x18>
 4a0:	9d d0       	rcall	.+314    	; 0x5dc <__fp_pscA>
 4a2:	30 f0       	brcs	.+12     	; 0x4b0 <__divsf3+0x18>
 4a4:	21 f4       	brne	.+8      	; 0x4ae <__divsf3+0x16>
 4a6:	5f 3f       	cpi	r21, 0xFF	; 255
 4a8:	19 f0       	breq	.+6      	; 0x4b0 <__divsf3+0x18>
 4aa:	8f c0       	rjmp	.+286    	; 0x5ca <__fp_inf>
 4ac:	51 11       	cpse	r21, r1
 4ae:	d8 c0       	rjmp	.+432    	; 0x660 <__fp_szero>
 4b0:	92 c0       	rjmp	.+292    	; 0x5d6 <__fp_nan>

000004b2 <__divsf3x>:
 4b2:	b3 d0       	rcall	.+358    	; 0x61a <__fp_split3>
 4b4:	98 f3       	brcs	.-26     	; 0x49c <__divsf3+0x4>

000004b6 <__divsf3_pse>:
 4b6:	99 23       	and	r25, r25
 4b8:	c9 f3       	breq	.-14     	; 0x4ac <__divsf3+0x14>
 4ba:	55 23       	and	r21, r21
 4bc:	b1 f3       	breq	.-20     	; 0x4aa <__divsf3+0x12>
 4be:	95 1b       	sub	r25, r21
 4c0:	55 0b       	sbc	r21, r21
 4c2:	bb 27       	eor	r27, r27
 4c4:	aa 27       	eor	r26, r26
 4c6:	62 17       	cp	r22, r18
 4c8:	73 07       	cpc	r23, r19
 4ca:	84 07       	cpc	r24, r20
 4cc:	38 f0       	brcs	.+14     	; 0x4dc <__divsf3_pse+0x26>
 4ce:	9f 5f       	subi	r25, 0xFF	; 255
 4d0:	5f 4f       	sbci	r21, 0xFF	; 255
 4d2:	22 0f       	add	r18, r18
 4d4:	33 1f       	adc	r19, r19
 4d6:	44 1f       	adc	r20, r20
 4d8:	aa 1f       	adc	r26, r26
 4da:	a9 f3       	breq	.-22     	; 0x4c6 <__divsf3_pse+0x10>
 4dc:	33 d0       	rcall	.+102    	; 0x544 <__divsf3_pse+0x8e>
 4de:	0e 2e       	mov	r0, r30
 4e0:	3a f0       	brmi	.+14     	; 0x4f0 <__divsf3_pse+0x3a>
 4e2:	e0 e8       	ldi	r30, 0x80	; 128
 4e4:	30 d0       	rcall	.+96     	; 0x546 <__divsf3_pse+0x90>
 4e6:	91 50       	subi	r25, 0x01	; 1
 4e8:	50 40       	sbci	r21, 0x00	; 0
 4ea:	e6 95       	lsr	r30
 4ec:	00 1c       	adc	r0, r0
 4ee:	ca f7       	brpl	.-14     	; 0x4e2 <__divsf3_pse+0x2c>
 4f0:	29 d0       	rcall	.+82     	; 0x544 <__divsf3_pse+0x8e>
 4f2:	fe 2f       	mov	r31, r30
 4f4:	27 d0       	rcall	.+78     	; 0x544 <__divsf3_pse+0x8e>
 4f6:	66 0f       	add	r22, r22
 4f8:	77 1f       	adc	r23, r23
 4fa:	88 1f       	adc	r24, r24
 4fc:	bb 1f       	adc	r27, r27
 4fe:	26 17       	cp	r18, r22
 500:	37 07       	cpc	r19, r23
 502:	48 07       	cpc	r20, r24
 504:	ab 07       	cpc	r26, r27
 506:	b0 e8       	ldi	r27, 0x80	; 128
 508:	09 f0       	breq	.+2      	; 0x50c <__divsf3_pse+0x56>
 50a:	bb 0b       	sbc	r27, r27
 50c:	80 2d       	mov	r24, r0
 50e:	bf 01       	movw	r22, r30
 510:	ff 27       	eor	r31, r31
 512:	93 58       	subi	r25, 0x83	; 131
 514:	5f 4f       	sbci	r21, 0xFF	; 255
 516:	2a f0       	brmi	.+10     	; 0x522 <__divsf3_pse+0x6c>
 518:	9e 3f       	cpi	r25, 0xFE	; 254
 51a:	51 05       	cpc	r21, r1
 51c:	68 f0       	brcs	.+26     	; 0x538 <__divsf3_pse+0x82>
 51e:	55 c0       	rjmp	.+170    	; 0x5ca <__fp_inf>
 520:	9f c0       	rjmp	.+318    	; 0x660 <__fp_szero>
 522:	5f 3f       	cpi	r21, 0xFF	; 255
 524:	ec f3       	brlt	.-6      	; 0x520 <__divsf3_pse+0x6a>
 526:	98 3e       	cpi	r25, 0xE8	; 232
 528:	dc f3       	brlt	.-10     	; 0x520 <__divsf3_pse+0x6a>
 52a:	86 95       	lsr	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	b7 95       	ror	r27
 532:	f7 95       	ror	r31
 534:	9f 5f       	subi	r25, 0xFF	; 255
 536:	c9 f7       	brne	.-14     	; 0x52a <__divsf3_pse+0x74>
 538:	88 0f       	add	r24, r24
 53a:	91 1d       	adc	r25, r1
 53c:	96 95       	lsr	r25
 53e:	87 95       	ror	r24
 540:	97 f9       	bld	r25, 7
 542:	08 95       	ret
 544:	e1 e0       	ldi	r30, 0x01	; 1
 546:	66 0f       	add	r22, r22
 548:	77 1f       	adc	r23, r23
 54a:	88 1f       	adc	r24, r24
 54c:	bb 1f       	adc	r27, r27
 54e:	62 17       	cp	r22, r18
 550:	73 07       	cpc	r23, r19
 552:	84 07       	cpc	r24, r20
 554:	ba 07       	cpc	r27, r26
 556:	20 f0       	brcs	.+8      	; 0x560 <__divsf3_pse+0xaa>
 558:	62 1b       	sub	r22, r18
 55a:	73 0b       	sbc	r23, r19
 55c:	84 0b       	sbc	r24, r20
 55e:	ba 0b       	sbc	r27, r26
 560:	ee 1f       	adc	r30, r30
 562:	88 f7       	brcc	.-30     	; 0x546 <__divsf3_pse+0x90>
 564:	e0 95       	com	r30
 566:	08 95       	ret

00000568 <__fixsfsi>:
 568:	04 d0       	rcall	.+8      	; 0x572 <__fixunssfsi>
 56a:	68 94       	set
 56c:	b1 11       	cpse	r27, r1
 56e:	78 c0       	rjmp	.+240    	; 0x660 <__fp_szero>
 570:	08 95       	ret

00000572 <__fixunssfsi>:
 572:	5b d0       	rcall	.+182    	; 0x62a <__fp_splitA>
 574:	88 f0       	brcs	.+34     	; 0x598 <__fixunssfsi+0x26>
 576:	9f 57       	subi	r25, 0x7F	; 127
 578:	90 f0       	brcs	.+36     	; 0x59e <__fixunssfsi+0x2c>
 57a:	b9 2f       	mov	r27, r25
 57c:	99 27       	eor	r25, r25
 57e:	b7 51       	subi	r27, 0x17	; 23
 580:	a0 f0       	brcs	.+40     	; 0x5aa <__fixunssfsi+0x38>
 582:	d1 f0       	breq	.+52     	; 0x5b8 <__fixunssfsi+0x46>
 584:	66 0f       	add	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	99 1f       	adc	r25, r25
 58c:	1a f0       	brmi	.+6      	; 0x594 <__fixunssfsi+0x22>
 58e:	ba 95       	dec	r27
 590:	c9 f7       	brne	.-14     	; 0x584 <__fixunssfsi+0x12>
 592:	12 c0       	rjmp	.+36     	; 0x5b8 <__fixunssfsi+0x46>
 594:	b1 30       	cpi	r27, 0x01	; 1
 596:	81 f0       	breq	.+32     	; 0x5b8 <__fixunssfsi+0x46>
 598:	62 d0       	rcall	.+196    	; 0x65e <__fp_zero>
 59a:	b1 e0       	ldi	r27, 0x01	; 1
 59c:	08 95       	ret
 59e:	5f c0       	rjmp	.+190    	; 0x65e <__fp_zero>
 5a0:	67 2f       	mov	r22, r23
 5a2:	78 2f       	mov	r23, r24
 5a4:	88 27       	eor	r24, r24
 5a6:	b8 5f       	subi	r27, 0xF8	; 248
 5a8:	39 f0       	breq	.+14     	; 0x5b8 <__fixunssfsi+0x46>
 5aa:	b9 3f       	cpi	r27, 0xF9	; 249
 5ac:	cc f3       	brlt	.-14     	; 0x5a0 <__fixunssfsi+0x2e>
 5ae:	86 95       	lsr	r24
 5b0:	77 95       	ror	r23
 5b2:	67 95       	ror	r22
 5b4:	b3 95       	inc	r27
 5b6:	d9 f7       	brne	.-10     	; 0x5ae <__fixunssfsi+0x3c>
 5b8:	3e f4       	brtc	.+14     	; 0x5c8 <__fixunssfsi+0x56>
 5ba:	90 95       	com	r25
 5bc:	80 95       	com	r24
 5be:	70 95       	com	r23
 5c0:	61 95       	neg	r22
 5c2:	7f 4f       	sbci	r23, 0xFF	; 255
 5c4:	8f 4f       	sbci	r24, 0xFF	; 255
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	08 95       	ret

000005ca <__fp_inf>:
 5ca:	97 f9       	bld	r25, 7
 5cc:	9f 67       	ori	r25, 0x7F	; 127
 5ce:	80 e8       	ldi	r24, 0x80	; 128
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	60 e0       	ldi	r22, 0x00	; 0
 5d4:	08 95       	ret

000005d6 <__fp_nan>:
 5d6:	9f ef       	ldi	r25, 0xFF	; 255
 5d8:	80 ec       	ldi	r24, 0xC0	; 192
 5da:	08 95       	ret

000005dc <__fp_pscA>:
 5dc:	00 24       	eor	r0, r0
 5de:	0a 94       	dec	r0
 5e0:	16 16       	cp	r1, r22
 5e2:	17 06       	cpc	r1, r23
 5e4:	18 06       	cpc	r1, r24
 5e6:	09 06       	cpc	r0, r25
 5e8:	08 95       	ret

000005ea <__fp_pscB>:
 5ea:	00 24       	eor	r0, r0
 5ec:	0a 94       	dec	r0
 5ee:	12 16       	cp	r1, r18
 5f0:	13 06       	cpc	r1, r19
 5f2:	14 06       	cpc	r1, r20
 5f4:	05 06       	cpc	r0, r21
 5f6:	08 95       	ret

000005f8 <__fp_round>:
 5f8:	09 2e       	mov	r0, r25
 5fa:	03 94       	inc	r0
 5fc:	00 0c       	add	r0, r0
 5fe:	11 f4       	brne	.+4      	; 0x604 <__fp_round+0xc>
 600:	88 23       	and	r24, r24
 602:	52 f0       	brmi	.+20     	; 0x618 <__fp_round+0x20>
 604:	bb 0f       	add	r27, r27
 606:	40 f4       	brcc	.+16     	; 0x618 <__fp_round+0x20>
 608:	bf 2b       	or	r27, r31
 60a:	11 f4       	brne	.+4      	; 0x610 <__fp_round+0x18>
 60c:	60 ff       	sbrs	r22, 0
 60e:	04 c0       	rjmp	.+8      	; 0x618 <__fp_round+0x20>
 610:	6f 5f       	subi	r22, 0xFF	; 255
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	8f 4f       	sbci	r24, 0xFF	; 255
 616:	9f 4f       	sbci	r25, 0xFF	; 255
 618:	08 95       	ret

0000061a <__fp_split3>:
 61a:	57 fd       	sbrc	r21, 7
 61c:	90 58       	subi	r25, 0x80	; 128
 61e:	44 0f       	add	r20, r20
 620:	55 1f       	adc	r21, r21
 622:	59 f0       	breq	.+22     	; 0x63a <__fp_splitA+0x10>
 624:	5f 3f       	cpi	r21, 0xFF	; 255
 626:	71 f0       	breq	.+28     	; 0x644 <__fp_splitA+0x1a>
 628:	47 95       	ror	r20

0000062a <__fp_splitA>:
 62a:	88 0f       	add	r24, r24
 62c:	97 fb       	bst	r25, 7
 62e:	99 1f       	adc	r25, r25
 630:	61 f0       	breq	.+24     	; 0x64a <__fp_splitA+0x20>
 632:	9f 3f       	cpi	r25, 0xFF	; 255
 634:	79 f0       	breq	.+30     	; 0x654 <__fp_splitA+0x2a>
 636:	87 95       	ror	r24
 638:	08 95       	ret
 63a:	12 16       	cp	r1, r18
 63c:	13 06       	cpc	r1, r19
 63e:	14 06       	cpc	r1, r20
 640:	55 1f       	adc	r21, r21
 642:	f2 cf       	rjmp	.-28     	; 0x628 <__fp_split3+0xe>
 644:	46 95       	lsr	r20
 646:	f1 df       	rcall	.-30     	; 0x62a <__fp_splitA>
 648:	08 c0       	rjmp	.+16     	; 0x65a <__fp_splitA+0x30>
 64a:	16 16       	cp	r1, r22
 64c:	17 06       	cpc	r1, r23
 64e:	18 06       	cpc	r1, r24
 650:	99 1f       	adc	r25, r25
 652:	f1 cf       	rjmp	.-30     	; 0x636 <__fp_splitA+0xc>
 654:	86 95       	lsr	r24
 656:	71 05       	cpc	r23, r1
 658:	61 05       	cpc	r22, r1
 65a:	08 94       	sec
 65c:	08 95       	ret

0000065e <__fp_zero>:
 65e:	e8 94       	clt

00000660 <__fp_szero>:
 660:	bb 27       	eor	r27, r27
 662:	66 27       	eor	r22, r22
 664:	77 27       	eor	r23, r23
 666:	cb 01       	movw	r24, r22
 668:	97 f9       	bld	r25, 7
 66a:	08 95       	ret

0000066c <__gesf2>:
 66c:	66 d0       	rcall	.+204    	; 0x73a <__fp_cmp>
 66e:	08 f4       	brcc	.+2      	; 0x672 <__gesf2+0x6>
 670:	8f ef       	ldi	r24, 0xFF	; 255
 672:	08 95       	ret

00000674 <__mulsf3>:
 674:	0b d0       	rcall	.+22     	; 0x68c <__mulsf3x>
 676:	c0 cf       	rjmp	.-128    	; 0x5f8 <__fp_round>
 678:	b1 df       	rcall	.-158    	; 0x5dc <__fp_pscA>
 67a:	28 f0       	brcs	.+10     	; 0x686 <__mulsf3+0x12>
 67c:	b6 df       	rcall	.-148    	; 0x5ea <__fp_pscB>
 67e:	18 f0       	brcs	.+6      	; 0x686 <__mulsf3+0x12>
 680:	95 23       	and	r25, r21
 682:	09 f0       	breq	.+2      	; 0x686 <__mulsf3+0x12>
 684:	a2 cf       	rjmp	.-188    	; 0x5ca <__fp_inf>
 686:	a7 cf       	rjmp	.-178    	; 0x5d6 <__fp_nan>
 688:	11 24       	eor	r1, r1
 68a:	ea cf       	rjmp	.-44     	; 0x660 <__fp_szero>

0000068c <__mulsf3x>:
 68c:	c6 df       	rcall	.-116    	; 0x61a <__fp_split3>
 68e:	a0 f3       	brcs	.-24     	; 0x678 <__mulsf3+0x4>

00000690 <__mulsf3_pse>:
 690:	95 9f       	mul	r25, r21
 692:	d1 f3       	breq	.-12     	; 0x688 <__mulsf3+0x14>
 694:	95 0f       	add	r25, r21
 696:	50 e0       	ldi	r21, 0x00	; 0
 698:	55 1f       	adc	r21, r21
 69a:	62 9f       	mul	r22, r18
 69c:	f0 01       	movw	r30, r0
 69e:	72 9f       	mul	r23, r18
 6a0:	bb 27       	eor	r27, r27
 6a2:	f0 0d       	add	r31, r0
 6a4:	b1 1d       	adc	r27, r1
 6a6:	63 9f       	mul	r22, r19
 6a8:	aa 27       	eor	r26, r26
 6aa:	f0 0d       	add	r31, r0
 6ac:	b1 1d       	adc	r27, r1
 6ae:	aa 1f       	adc	r26, r26
 6b0:	64 9f       	mul	r22, r20
 6b2:	66 27       	eor	r22, r22
 6b4:	b0 0d       	add	r27, r0
 6b6:	a1 1d       	adc	r26, r1
 6b8:	66 1f       	adc	r22, r22
 6ba:	82 9f       	mul	r24, r18
 6bc:	22 27       	eor	r18, r18
 6be:	b0 0d       	add	r27, r0
 6c0:	a1 1d       	adc	r26, r1
 6c2:	62 1f       	adc	r22, r18
 6c4:	73 9f       	mul	r23, r19
 6c6:	b0 0d       	add	r27, r0
 6c8:	a1 1d       	adc	r26, r1
 6ca:	62 1f       	adc	r22, r18
 6cc:	83 9f       	mul	r24, r19
 6ce:	a0 0d       	add	r26, r0
 6d0:	61 1d       	adc	r22, r1
 6d2:	22 1f       	adc	r18, r18
 6d4:	74 9f       	mul	r23, r20
 6d6:	33 27       	eor	r19, r19
 6d8:	a0 0d       	add	r26, r0
 6da:	61 1d       	adc	r22, r1
 6dc:	23 1f       	adc	r18, r19
 6de:	84 9f       	mul	r24, r20
 6e0:	60 0d       	add	r22, r0
 6e2:	21 1d       	adc	r18, r1
 6e4:	82 2f       	mov	r24, r18
 6e6:	76 2f       	mov	r23, r22
 6e8:	6a 2f       	mov	r22, r26
 6ea:	11 24       	eor	r1, r1
 6ec:	9f 57       	subi	r25, 0x7F	; 127
 6ee:	50 40       	sbci	r21, 0x00	; 0
 6f0:	8a f0       	brmi	.+34     	; 0x714 <__mulsf3_pse+0x84>
 6f2:	e1 f0       	breq	.+56     	; 0x72c <__mulsf3_pse+0x9c>
 6f4:	88 23       	and	r24, r24
 6f6:	4a f0       	brmi	.+18     	; 0x70a <__mulsf3_pse+0x7a>
 6f8:	ee 0f       	add	r30, r30
 6fa:	ff 1f       	adc	r31, r31
 6fc:	bb 1f       	adc	r27, r27
 6fe:	66 1f       	adc	r22, r22
 700:	77 1f       	adc	r23, r23
 702:	88 1f       	adc	r24, r24
 704:	91 50       	subi	r25, 0x01	; 1
 706:	50 40       	sbci	r21, 0x00	; 0
 708:	a9 f7       	brne	.-22     	; 0x6f4 <__mulsf3_pse+0x64>
 70a:	9e 3f       	cpi	r25, 0xFE	; 254
 70c:	51 05       	cpc	r21, r1
 70e:	70 f0       	brcs	.+28     	; 0x72c <__mulsf3_pse+0x9c>
 710:	5c cf       	rjmp	.-328    	; 0x5ca <__fp_inf>
 712:	a6 cf       	rjmp	.-180    	; 0x660 <__fp_szero>
 714:	5f 3f       	cpi	r21, 0xFF	; 255
 716:	ec f3       	brlt	.-6      	; 0x712 <__mulsf3_pse+0x82>
 718:	98 3e       	cpi	r25, 0xE8	; 232
 71a:	dc f3       	brlt	.-10     	; 0x712 <__mulsf3_pse+0x82>
 71c:	86 95       	lsr	r24
 71e:	77 95       	ror	r23
 720:	67 95       	ror	r22
 722:	b7 95       	ror	r27
 724:	f7 95       	ror	r31
 726:	e7 95       	ror	r30
 728:	9f 5f       	subi	r25, 0xFF	; 255
 72a:	c1 f7       	brne	.-16     	; 0x71c <__mulsf3_pse+0x8c>
 72c:	fe 2b       	or	r31, r30
 72e:	88 0f       	add	r24, r24
 730:	91 1d       	adc	r25, r1
 732:	96 95       	lsr	r25
 734:	87 95       	ror	r24
 736:	97 f9       	bld	r25, 7
 738:	08 95       	ret

0000073a <__fp_cmp>:
 73a:	99 0f       	add	r25, r25
 73c:	00 08       	sbc	r0, r0
 73e:	55 0f       	add	r21, r21
 740:	aa 0b       	sbc	r26, r26
 742:	e0 e8       	ldi	r30, 0x80	; 128
 744:	fe ef       	ldi	r31, 0xFE	; 254
 746:	16 16       	cp	r1, r22
 748:	17 06       	cpc	r1, r23
 74a:	e8 07       	cpc	r30, r24
 74c:	f9 07       	cpc	r31, r25
 74e:	c0 f0       	brcs	.+48     	; 0x780 <__fp_cmp+0x46>
 750:	12 16       	cp	r1, r18
 752:	13 06       	cpc	r1, r19
 754:	e4 07       	cpc	r30, r20
 756:	f5 07       	cpc	r31, r21
 758:	98 f0       	brcs	.+38     	; 0x780 <__fp_cmp+0x46>
 75a:	62 1b       	sub	r22, r18
 75c:	73 0b       	sbc	r23, r19
 75e:	84 0b       	sbc	r24, r20
 760:	95 0b       	sbc	r25, r21
 762:	39 f4       	brne	.+14     	; 0x772 <__fp_cmp+0x38>
 764:	0a 26       	eor	r0, r26
 766:	61 f0       	breq	.+24     	; 0x780 <__fp_cmp+0x46>
 768:	23 2b       	or	r18, r19
 76a:	24 2b       	or	r18, r20
 76c:	25 2b       	or	r18, r21
 76e:	21 f4       	brne	.+8      	; 0x778 <__fp_cmp+0x3e>
 770:	08 95       	ret
 772:	0a 26       	eor	r0, r26
 774:	09 f4       	brne	.+2      	; 0x778 <__fp_cmp+0x3e>
 776:	a1 40       	sbci	r26, 0x01	; 1
 778:	a6 95       	lsr	r26
 77a:	8f ef       	ldi	r24, 0xFF	; 255
 77c:	81 1d       	adc	r24, r1
 77e:	81 1d       	adc	r24, r1
 780:	08 95       	ret

00000782 <__divmodhi4>:
 782:	97 fb       	bst	r25, 7
 784:	07 2e       	mov	r0, r23
 786:	16 f4       	brtc	.+4      	; 0x78c <__divmodhi4+0xa>
 788:	00 94       	com	r0
 78a:	06 d0       	rcall	.+12     	; 0x798 <__divmodhi4_neg1>
 78c:	77 fd       	sbrc	r23, 7
 78e:	08 d0       	rcall	.+16     	; 0x7a0 <__divmodhi4_neg2>
 790:	0b d0       	rcall	.+22     	; 0x7a8 <__udivmodhi4>
 792:	07 fc       	sbrc	r0, 7
 794:	05 d0       	rcall	.+10     	; 0x7a0 <__divmodhi4_neg2>
 796:	3e f4       	brtc	.+14     	; 0x7a6 <__divmodhi4_exit>

00000798 <__divmodhi4_neg1>:
 798:	90 95       	com	r25
 79a:	81 95       	neg	r24
 79c:	9f 4f       	sbci	r25, 0xFF	; 255
 79e:	08 95       	ret

000007a0 <__divmodhi4_neg2>:
 7a0:	70 95       	com	r23
 7a2:	61 95       	neg	r22
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255

000007a6 <__divmodhi4_exit>:
 7a6:	08 95       	ret

000007a8 <__udivmodhi4>:
 7a8:	aa 1b       	sub	r26, r26
 7aa:	bb 1b       	sub	r27, r27
 7ac:	51 e1       	ldi	r21, 0x11	; 17
 7ae:	07 c0       	rjmp	.+14     	; 0x7be <__udivmodhi4_ep>

000007b0 <__udivmodhi4_loop>:
 7b0:	aa 1f       	adc	r26, r26
 7b2:	bb 1f       	adc	r27, r27
 7b4:	a6 17       	cp	r26, r22
 7b6:	b7 07       	cpc	r27, r23
 7b8:	10 f0       	brcs	.+4      	; 0x7be <__udivmodhi4_ep>
 7ba:	a6 1b       	sub	r26, r22
 7bc:	b7 0b       	sbc	r27, r23

000007be <__udivmodhi4_ep>:
 7be:	88 1f       	adc	r24, r24
 7c0:	99 1f       	adc	r25, r25
 7c2:	5a 95       	dec	r21
 7c4:	a9 f7       	brne	.-22     	; 0x7b0 <__udivmodhi4_loop>
 7c6:	80 95       	com	r24
 7c8:	90 95       	com	r25
 7ca:	bc 01       	movw	r22, r24
 7cc:	cd 01       	movw	r24, r26
 7ce:	08 95       	ret

000007d0 <_exit>:
 7d0:	f8 94       	cli

000007d2 <__stop_program>:
 7d2:	ff cf       	rjmp	.-2      	; 0x7d2 <__stop_program>
